"""
Auto-generated operations map for The Companies API.
This file is generated by scripts/generate_schema.py - do not edit manually.
"""

from typing import Dict, List

# Operations map extracted from OpenAPI schema
operations_map = {
    "fetchApiHealth": {
        "path": "/",
        "method": "get",
        "pathParams": []
    },
    "fetchOpenApi": {
        "path": "/v2/openapi",
        "method": "get",
        "pathParams": []
    },
    "fetchActions": {
        "path": "/v2/actions",
        "method": "get",
        "pathParams": []
    },
    "requestAction": {
        "path": "/v2/actions",
        "method": "post",
        "pathParams": []
    },
    "retryAction": {
        "path": "/v2/actions/{actionId}/retry",
        "method": "post",
        "pathParams": [
            "actionId"
        ]
    },
    "searchCompanies": {
        "path": "/v2/companies",
        "method": "get",
        "pathParams": []
    },
    "searchCompaniesPost": {
        "path": "/v2/companies",
        "method": "post",
        "pathParams": []
    },
    "fetchCompany": {
        "path": "/v2/companies/{domain}",
        "method": "get",
        "pathParams": [
            "domain"
        ]
    },
    "searchCompaniesByName": {
        "path": "/v2/companies/by-name",
        "method": "get",
        "pathParams": []
    },
    "searchCompaniesByPrompt": {
        "path": "/v2/companies/by-prompt",
        "method": "get",
        "pathParams": []
    },
    "searchSimilarCompanies": {
        "path": "/v2/companies/similar",
        "method": "get",
        "pathParams": []
    },
    "countCompanies": {
        "path": "/v2/companies/count",
        "method": "get",
        "pathParams": []
    },
    "countCompaniesPost": {
        "path": "/v2/companies/count",
        "method": "post",
        "pathParams": []
    },
    "fetchCompanyByEmail": {
        "path": "/v2/companies/by-email",
        "method": "get",
        "pathParams": []
    },
    "fetchCompanyBySocial": {
        "path": "/v2/companies/by-social",
        "method": "get",
        "pathParams": []
    },
    "fetchCompanyEmailPatterns": {
        "path": "/v2/companies/{domain}/email-patterns",
        "method": "get",
        "pathParams": [
            "domain"
        ]
    },
    "askCompany": {
        "path": "/v2/companies/{domain}/ask",
        "method": "post",
        "pathParams": [
            "domain"
        ]
    },
    "fetchCompanyContext": {
        "path": "/v2/companies/{domain}/context",
        "method": "get",
        "pathParams": [
            "domain"
        ]
    },
    "fetchCompaniesAnalytics": {
        "path": "/v2/companies/analytics",
        "method": "get",
        "pathParams": []
    },
    "exportCompaniesAnalytics": {
        "path": "/v2/companies/analytics/export",
        "method": "post",
        "pathParams": []
    },
    "searchIndustries": {
        "path": "/v2/industries",
        "method": "get",
        "pathParams": []
    },
    "searchIndustriesSimilar": {
        "path": "/v2/industries/similar",
        "method": "get",
        "pathParams": []
    },
    "searchTechnologies": {
        "path": "/v2/technologies",
        "method": "get",
        "pathParams": []
    },
    "searchCities": {
        "path": "/v2/locations/cities",
        "method": "get",
        "pathParams": []
    },
    "searchCounties": {
        "path": "/v2/locations/counties",
        "method": "get",
        "pathParams": []
    },
    "searchCountries": {
        "path": "/v2/locations/countries",
        "method": "get",
        "pathParams": []
    },
    "searchStates": {
        "path": "/v2/locations/states",
        "method": "get",
        "pathParams": []
    },
    "searchContinents": {
        "path": "/v2/locations/continents",
        "method": "get",
        "pathParams": []
    },
    "enrichJobTitles": {
        "path": "/v2/job-titles/enrich",
        "method": "get",
        "pathParams": []
    },
    "fetchLists": {
        "path": "/v2/lists",
        "method": "get",
        "pathParams": []
    },
    "createList": {
        "path": "/v2/lists",
        "method": "post",
        "pathParams": []
    },
    "updateList": {
        "path": "/v2/lists/{listId}",
        "method": "patch",
        "pathParams": [
            "listId"
        ]
    },
    "deleteList": {
        "path": "/v2/lists/{listId}",
        "method": "delete",
        "pathParams": [
            "listId"
        ]
    },
    "fetchCompaniesInList": {
        "path": "/v2/lists/{listId}/companies",
        "method": "get",
        "pathParams": [
            "listId"
        ]
    },
    "fetchCompaniesInListPost": {
        "path": "/v2/lists/{listId}/companies",
        "method": "post",
        "pathParams": [
            "listId"
        ]
    },
    "fetchCompanyInList": {
        "path": "/v2/lists/{listId}/companies/{domain}",
        "method": "get",
        "pathParams": [
            "listId",
            "domain"
        ]
    },
    "toggleCompaniesInList": {
        "path": "/v2/lists/{listId}/companies/toggle",
        "method": "patch",
        "pathParams": [
            "listId"
        ]
    },
    "fetchTeam": {
        "path": "/v2/teams/{teamId}",
        "method": "get",
        "pathParams": [
            "teamId"
        ]
    },
    "updateTeam": {
        "path": "/v2/teams/{teamId}",
        "method": "patch",
        "pathParams": [
            "teamId"
        ]
    },
    "fetchUser": {
        "path": "/v2/user",
        "method": "get",
        "pathParams": []
    },
    "fetchPrompts": {
        "path": "/v2/prompts",
        "method": "get",
        "pathParams": []
    },
    "deletePrompt": {
        "path": "/v2/prompts/{promptId}",
        "method": "delete",
        "pathParams": [
            "promptId"
        ]
    },
    "productPrompt": {
        "path": "/v2/prompts/product",
        "method": "post",
        "pathParams": []
    },
    "promptToSegmentation": {
        "path": "/v2/prompts/segmentation",
        "method": "post",
        "pathParams": []
    }
}

# Type alias for operations map
OperationsMap = Dict[str, Dict[str, any]]
